This patch file can be applied to Google's protoc project to
add support for two Swift-specific options.  To apply this patch,
you'll need a clean checkout of protobuf, then:

    $ /bin/sh autogen.sh
    $ ./configure
    $ make
    $ patch -p1 < path_to_this_patch_file
    $ /bin/sh generate_descriptor_protos.sh
    $ make
    $ make check
    $ sudo make install

After installing protoc with this patch, you can use the following new
option in your .proto files that will affect how Swift code is generated:

    option swift_prefix=<String>

Use the given string as a prefix on all top-level generated types.
For example, if you specify `swift_prefix="My"`, then `message Foo`
will generate a `struct MyFoo`.  If you don't specify this option, a
default prefix is generated from the package name.  If there is no
package declaration, then no prefix will be used.

diff --git a/src/google/protobuf/descriptor.proto b/src/google/protobuf/descriptor.proto
index 08b1555..4fb5f64 100644
--- a/src/google/protobuf/descriptor.proto
+++ b/src/google/protobuf/descriptor.proto
@@ -370,20 +370,24 @@ message FileOptions {
   optional bool cc_enable_arenas = 31 [default=false];
 
 
   // Sets the objective c class prefix which is prepended to all objective c
   // generated classes from this .proto. There is no default.
   optional string objc_class_prefix = 36;
 
   // Namespace for generated classes; defaults to the package.
   optional string csharp_namespace = 37;
 
+  // Prefix prepended to all Swift generated top-level types.
+  // Default is CamelCased package name.
+  optional string swift_prefix = 39;
+
   // The parser stores options it doesn't recognize here. See above.
   repeated UninterpretedOption uninterpreted_option = 999;
 
   // Clients can define custom options in extensions of this message. See above.
   extensions 1000 to max;
 
-  reserved 38;
+  reserved 40;
 }
 
 message MessageOptions {

