/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/unittest_arena.proto
 *
 */

import Protobuf


public struct Proto2ArenaUnittest_NestedMessage: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Proto2ArenaUnittest_NestedMessage"}
  public var protoMessageName: String {return "NestedMessage"}
  public var protoPackageName: String {return "proto2_arena_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "d": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "d": 1,
  ]}

  var unknown = ProtobufUnknownStorage()

  public var d: Int32? = nil

  public init() {}

  public init(d: Int32? = nil)
  {
    self.d = d
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &d)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = d {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 1, protoFieldName: "d", jsonFieldName: "d", swiftFieldName: "d")
    }
    unknown.traverse(visitor: &visitor)
  }

  public var _protoc_generated_isEmpty: Bool {
    if d != nil {return false}
    if !unknown.isEmpty {return false}
    return true
  }

  public func _protoc_generated_isEqualTo(other: Proto2ArenaUnittest_NestedMessage) -> Bool {
    if ((d != nil || other.d != nil) && (d == nil || other.d == nil || d! != other.d!)) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Proto2ArenaUnittest_ArenaMessage: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Proto2ArenaUnittest_ArenaMessage"}
  public var protoMessageName: String {return "ArenaMessage"}
  public var protoPackageName: String {return "proto2_arena_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "repeatedNestedMessage": 1,
    "repeatedImportNoArenaMessage": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "repeated_nested_message": 1,
    "repeated_import_no_arena_message": 2,
  ]}

  var unknown = ProtobufUnknownStorage()

  public var repeatedNestedMessage: [Proto2ArenaUnittest_NestedMessage] = []

  public var repeatedImportNoArenaMessage: [Proto2ArenaUnittest_ImportNoArenaNestedMessage] = []

  public init() {}

  public init(repeatedNestedMessage: [Proto2ArenaUnittest_NestedMessage] = [],
    repeatedImportNoArenaMessage: [Proto2ArenaUnittest_ImportNoArenaNestedMessage] = [])
  {
    if !repeatedNestedMessage.isEmpty {
      self.repeatedNestedMessage = repeatedNestedMessage
    }
    if !repeatedImportNoArenaMessage.isEmpty {
      self.repeatedImportNoArenaMessage = repeatedImportNoArenaMessage
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Proto2ArenaUnittest_NestedMessage.self, value: &repeatedNestedMessage)
    case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Proto2ArenaUnittest_ImportNoArenaNestedMessage.self, value: &repeatedImportNoArenaMessage)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !repeatedNestedMessage.isEmpty {
      try visitor.visitRepeatedMessageField(value: repeatedNestedMessage, protoFieldNumber: 1, protoFieldName: "repeated_nested_message", jsonFieldName: "repeatedNestedMessage", swiftFieldName: "repeatedNestedMessage")
    }
    if !repeatedImportNoArenaMessage.isEmpty {
      try visitor.visitRepeatedMessageField(value: repeatedImportNoArenaMessage, protoFieldNumber: 2, protoFieldName: "repeated_import_no_arena_message", jsonFieldName: "repeatedImportNoArenaMessage", swiftFieldName: "repeatedImportNoArenaMessage")
    }
    unknown.traverse(visitor: &visitor)
  }

  public var _protoc_generated_isEmpty: Bool {
    if !repeatedNestedMessage.isEmpty {return false}
    if !repeatedImportNoArenaMessage.isEmpty {return false}
    if !unknown.isEmpty {return false}
    return true
  }

  public func _protoc_generated_isEqualTo(other: Proto2ArenaUnittest_ArenaMessage) -> Bool {
    if repeatedNestedMessage != other.repeatedNestedMessage {return false}
    if repeatedImportNoArenaMessage != other.repeatedImportNoArenaMessage {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

